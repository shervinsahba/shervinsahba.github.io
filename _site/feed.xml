<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Thu, 15 Aug 2019 13:58:35 -0700</pubDate>
    <lastBuildDate>Thu, 15 Aug 2019 13:58:35 -0700</lastBuildDate>

    
      <item>
        <title>Taught my first Software Carpentry workshop.</title>
        <link>http://localhost:4000/taught-my-first-software-carpentry</link>
        <pubDate>Sun, 21 Jul 2019 00:00:00 -0700</pubDate>
        <author></author>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;The Carpentries is a volunteer-run organization that teaches foundational coding and data science skills to researchers worldwide.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Earlier this month, I instructed my first &lt;a href=&quot;https://uwescience.github.io/2019-07-15-uw/&quot;&gt;Software Carpentry workshop&lt;/a&gt;! This was both the first time I’ve live-coded and the first time I taught a room full of individuals who were further along in their careers than myself. The crowd was a mix of well-established professors, staff scientists, and graduate students.&lt;/p&gt;

&lt;p&gt;Needless to say, I prepared my UNIX and Shell scripting lesson twice-over! We somehow managed to press through the bulk of the 4.5 hours of material in the 3h we were allotted, and the number of thank-yous I received afterwards from established post-docs and scientists was humbling.&lt;/p&gt;

&lt;p&gt;If you enjoy making connections, teaching, and working with the tools of modern data science, I encourage you to check out &lt;a href=&quot;https://carpentries.org/&quot;&gt;The Carpentries&lt;/a&gt;.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Trim 3GB from Mathematica</title>
        <link>http://localhost:4000/trim-3gb-from-mathematica</link>
        <pubDate>Mon, 01 Apr 2019 00:00:00 -0700</pubDate>
        <author></author>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;This article describes how to reduce Mathematica’s footprint by 3GB to 5GB, retaining all core functionality.
As always, when modifying your system, please proceed at your own discretion.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mathematica requires around 10GB of disk space, and its documentation takes up about half of that space. A hulking mass of this data is dedicated to the pre-rendered examples in the Documentation, though, and you can cut this information out without disrupting core functionality.&lt;/p&gt;

&lt;p&gt;Here are a couple of suggestions to trim the fat:&lt;/p&gt;

&lt;h4 id=&quot;dont-install-the-docs-in-the-first-place&quot;&gt;Don’t install the docs in the first place.&lt;/h4&gt;
&lt;p&gt;If you’re installing a fresh copy of Mathematica, the wizard will likely include an option to forego the documentation installation. Be warned that your F1 key will no longer conjure the help you need to grok Wolfram, and you’ll need to turn to external resources.&amp;lt;/li&amp;gt;&lt;/p&gt;

&lt;h4 id=&quot;delete-the-documentation-directory-entirely&quot;&gt;Delete the documentation directory entirely.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://mathematica.stackexchange.com/questions/81250/is-it-safe-to-remove-the-documentation-notebooks&quot;&gt;Users have reported this to work safely&lt;/a&gt;. On a Linux system with the appropriate permissions, this is as simple as &lt;code&gt;rm -r /.../Mathematica/Documentation&lt;/code&gt;. You ought to be able to cut the folder from your Windows machine as well. Again, you’ll obviously lose documentation access with this route.&amp;lt;/li&amp;gt;&lt;/p&gt;

&lt;h4 id=&quot;delete-documentation-output-best-choice&quot;&gt;Delete documentation output. (BEST CHOICE)&lt;/h4&gt;
&lt;p&gt;For those of us who don’t want to run around headless in a world full of quirky Wolfram functions, consider &lt;i&gt;deleting the output&lt;/i&gt; from your documentation. This is the option you were hoping for: how to have your docs and eat them too. This option saved me 3.1GB of space.&lt;/p&gt;

&lt;p&gt;How does it work? You may have realized that each help file is actually a Mathematica notebook rife with previously outputted examples. A solution, then, is to keep all the coded information in these files but rid yourself of the output. If you need to visualize these plots and data, simply evaluate the desired line in the help file or run the notebook in its entirety.&lt;/p&gt;

&lt;p&gt;To pursue this option, I ran &lt;a href=&quot;https://mathematica.stackexchange.com/a/115489/20203&quot;&gt;David Z’s code provided in this Mathematica.SE answer&lt;/a&gt;. It didn’t crash my program nor my system. You may need to have write permissions on the …/Documentation directory for this to work; the Windows equivalent would likely be to run Mathematica as administrator.&lt;/p&gt;

&lt;p&gt;As a final note, the previous link also includes hints at other space-saving tricks, including deleting unessential Mathematica kernels. Anyway, I’m happy with the results of David Z’s code. Good stuff.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Dodge the Creeps! A Godot game.</title>
        <link>http://localhost:4000/my-first-godot-game</link>
        <pubDate>Mon, 27 Aug 2018 00:00:00 -0700</pubDate>
        <author></author>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;I tried out the Godot game engine and made an Android game called Dodge the Creeps! You can download it &lt;a href=&quot;https://github.com/shervinsahba/godot/tree/master/Dodge/export/Android&quot;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;i-grew-up-making-games&quot;&gt;I grew up making games.&lt;/h4&gt;

&lt;p&gt;I grew up enamored with video games. Naturally, as a youth, I ventured to make my own. This started by drawing pen and paper levels in elementary school to dabbling in old-school simplified game engines such as &lt;a href=&quot;https://www.youtube.com/watch?v=Cq997czKsx0&quot;&gt;Click ‘n Create&lt;/a&gt; and archaic versions of the still-alive &lt;a href=&quot;https://www.rpgmakerweb.com&quot;&gt;RPG Maker&lt;/a&gt; as a teen. My success was mostly limited to distributing a handful of 3.5” floppies to curious friends, but it was amazing fun. Anyway, I decided that game design is worth a revisit. On Sunday, I spent the morning working through a tutorial project in &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot&lt;/a&gt;, an open-source game engine designed at MIT.&lt;/p&gt;

&lt;h4 id=&quot;why-godot&quot;&gt;Why Godot?&lt;/h4&gt;

&lt;p&gt;I recommend Godot as a piece of software. It’s rising in popularity, works for both 2D and 3D game design, and is &lt;em&gt;completely free&lt;/em&gt; to use even for commercial purposes. Well-known contenders such as Unity are appealing too, but I’m enjoying the accessibility of Godot’s native and pythonic GDScript script, the ability to also use C# scripting, and it’s multi-OS compatability including Linux support.&lt;/p&gt;

&lt;h4 id=&quot;dodge-the-creeps&quot;&gt;Dodge the Creeps!&lt;/h4&gt;

&lt;p&gt;The game I worked on is a tutorial called &lt;a href=&quot;https://docs.godotengine.org/en/3.1/getting_started/step_by_step/your_first_game.html&quot;&gt;Dodge the Creeps!&lt;/a&gt; It’s a classic, top-down dodge the bad guys game. The assets and design are all from the tutorial, but I ported the game to Android and mapped the controls to the phone’s accelorometer. In my version, you play it by holding your phone level and tilting the screen to move.&lt;/p&gt;

&lt;p&gt;You can play it by downloading the &lt;a href=&quot;https://github.com/shervinsahba/godot/tree/master/Dodge/export/Android&quot;&gt;Dodge.apk&lt;/a&gt; file off my GitHub onto your Android device and running the app.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Email [at] obfuscation [dot] whatever?</title>
        <link>http://localhost:4000/email-obfuscation</link>
        <pubDate>Sun, 17 Jun 2018 00:00:00 -0700</pubDate>
        <author></author>
        <description>&lt;blockquote&gt;
  &lt;p&gt;My email address is on clear display: &lt;span style=&quot;display: inline-block; unicode-bidi: bidi-override; direction: rtl;&quot; onmouseover=&quot;this.innerText=this.innerText.split('').reverse().join(''); this.style.unicodeBidi=''; this.removeAttribute('onmouseover');&quot;&gt;ude.wu@abhass
&lt;/span&gt; 
. Is this madness? Will I succumb to spam crawlers?? Should I have opted for the traditional “foo [at] bar [dot] com” approach?! Well, here’s the thing. What you’re seeing is some sleight-of-hand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here’s the actual code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;
&amp;lt;span style=&quot;display: inline-block; unicode-bidi: bidi-override; direction: rtl;&quot;
onmouseover=&quot;this.innerText=this.innerText.split('').reverse().join('');
 this.style.unicodeBidi=''; this.removeAttribute('onmouseover');&quot;&amp;gt;
ude.wu@abhass
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The style property is set to reverse text direction, so the server and most bots see “ude.wu@abhass”. Bots typically seek the “@” symbol and then a dot afterwards, so I’m not at much risk here. A spammer could program their crawler to run forwards &lt;em&gt;and backwards&lt;/em&gt; to sniff out my email address, but that would mine too many false positives. In any case, &lt;a href=&quot;https://superuser.com/questions/235937/does-e-mail-address-obfuscation-actually-work&quot;&gt;this security measure appears effective&lt;/a&gt;, as the linked Superuser.SE post discusses.&lt;/p&gt;

&lt;p&gt;The mouseover property requires a javascript enabled browser. This code lets you copy the reversed text and magically paste it in the forward direction. Credit is due to user &lt;a href=&quot;https://superuser.com/questions/235937/does-e-mail-address-obfuscation-actually-work#comment786336_235965&quot;&gt;abenier’s comment&lt;/a&gt;. Without the mouseover code, you’ll copy the reversed string. For example, see what happens when you copy and paste the following text that doesn’t use the javascript mouseover code:
&lt;span style=&quot;display: inline-block; unicode-bidi: bidi-override; direction: rtl;&quot;&gt;
I HAVE DECODED THE ULTRA SECRET MESSAGE!
&lt;/span&gt;&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
